//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsService.CacheService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FingerPrintDataContract", Namespace="http://schemas.datacontract.org/2004/07/WCFService")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ArrayList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WsqImage))]
    public partial class FingerPrintDataContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ArrayList fingersCollectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ArrayList fingersCollection {
            get {
                return this.fingersCollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.fingersCollectionField, value) != true)) {
                    this.fingersCollectionField = value;
                    this.RaisePropertyChanged("fingersCollection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                if ((object.ReferenceEquals(this.idField, value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CacheService.IMemoryCacheService")]
    public interface IMemoryCacheService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMemoryCacheService/Contains", ReplyAction="http://tempuri.org/IMemoryCacheService/ContainsResponse")]
        bool Contains(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMemoryCacheService/SetDirty", ReplyAction="http://tempuri.org/IMemoryCacheService/SetDirtyResponse")]
        void SetDirty();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMemoryCacheService/GetRawFingerCollection", ReplyAction="http://tempuri.org/IMemoryCacheService/GetRawFingerCollectionResponse")]
        byte[] GetRawFingerCollection(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMemoryCacheService/GetQualityFingerCollection", ReplyAction="http://tempuri.org/IMemoryCacheService/GetQualityFingerCollectionResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WindowsService.CacheService.FingerPrintDataContract))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ArrayList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WsqImage))]
        System.Collections.ArrayList GetQualityFingerCollection(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMemoryCacheService/GetPicture", ReplyAction="http://tempuri.org/IMemoryCacheService/GetPictureResponse")]
        byte[] GetPicture(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMemoryCacheService/Put", ReplyAction="http://tempuri.org/IMemoryCacheService/PutResponse")]
        void Put(WindowsService.CacheService.FingerPrintDataContract fingersCollectionDataContract);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMemoryCacheServiceChannel : WindowsService.CacheService.IMemoryCacheService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MemoryCacheServiceClient : System.ServiceModel.ClientBase<WindowsService.CacheService.IMemoryCacheService>, WindowsService.CacheService.IMemoryCacheService {
        
        public MemoryCacheServiceClient() {
        }
        
        public MemoryCacheServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MemoryCacheServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MemoryCacheServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MemoryCacheServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Contains(string id) {
            return base.Channel.Contains(id);
        }
        
        public void SetDirty() {
            base.Channel.SetDirty();
        }
        
        public byte[] GetRawFingerCollection(string id) {
            return base.Channel.GetRawFingerCollection(id);
        }
        
        public System.Collections.ArrayList GetQualityFingerCollection(string id) {
            return base.Channel.GetQualityFingerCollection(id);
        }
        
        public byte[] GetPicture(string id) {
            return base.Channel.GetPicture(id);
        }
        
        public void Put(WindowsService.CacheService.FingerPrintDataContract fingersCollectionDataContract) {
            base.Channel.Put(fingersCollectionDataContract);
        }
    }
}
